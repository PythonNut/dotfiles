# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 14

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec alacritty

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# Bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
bindsym $mod+space exec --no-startup-id "rofi -combi-modi window,drun -show combi -modi combi"
bindsym $mod+o exec --no-startup-id "rofimoji -p"
bindsym $mod+p exec --no-startup-id "bwmenu"

# change focus
set $movemouse "sh -c 'eval `xdotool getactivewindow getwindowgeometry --shell`; xdotool mousemove $((X+WIDTH/2)) $((Y+HEIGHT/2))'"
bindsym $mod+h focus left; exec --no-startup-id $movemouse
bindsym $mod+j focus down; exec --no-startup-id $movemouse
bindsym $mod+k focus up; exec --no-startup-id $movemouse
bindsym $mod+l focus right; exec --no-startup-id$movemouse
# bindsym $mod+h focus left
# bindsym $mod+j focus down
# bindsym $mod+k focus up
# bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

bindsym $mod+Shift+Control+h move workspace to output left
bindsym $mod+Shift+Control+j move workspace to output down
bindsym $mod+Shift+Control+k move workspace to output up
bindsym $mod+Shift+Control+l move workspace to output right

bindsym $mod+Control+h focus output left
bindsym $mod+Control+j focus output down
bindsym $mod+Control+k focus output up
bindsym $mod+Control+l focus output right

# split in horizontal orientation
bindsym $mod+s split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+y layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+t focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# switch to workspace
bindsym $mod+1 workspace 1; exec --no-startup-id $movemouse
bindsym $mod+2 workspace 2; exec --no-startup-id $movemouse
bindsym $mod+3 workspace 3; exec --no-startup-id $movemouse
bindsym $mod+4 workspace 4; exec --no-startup-id $movemouse
bindsym $mod+5 workspace 5; exec --no-startup-id $movemouse
bindsym $mod+6 workspace 6; exec --no-startup-id $movemouse
bindsym $mod+7 workspace 7; exec --no-startup-id $movemouse
bindsym $mod+8 workspace 8; exec --no-startup-id $movemouse
bindsym $mod+9 workspace 9; exec --no-startup-id $movemouse
bindsym $mod+0 workspace 10; exec --no-startup-id $movemouse

workspace_auto_back_and_forth yes

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        height 30
        position top
        status_command i3status
        mode hide
        hidden_state hide
        modifier $mod

        colors {
                background #002b36R
                statusline #00A5FF #that neon blue
                separator #666666

                focused_workspace  #4c7899 #285577 #ffffff
                active_workspace   #333333 #5f676a #ffffff
                inactive_workspace #333333 #222222 #888888
                urgent_workspace   #2f343a #900000 #ffffff
        }
}

bindsym $mod+Shift+b bar hidden_state toggle

set $gap_width 40
bindsym $mod+g exec --no-startup-id "if [ $(i3-msg -t get_tree | jq -r \
    'recurse(.nodes[]) | if .type == \\"workspace\\" and .name == \\"'`i3-msg \
    -t get_workspaces | jq -r '.[] | if .[\\"focused\\"] then .[\\"name\\"] else \
    empty end'`'\\" then .gaps.inner else empty end') -eq 0 ]; \
    then \
        i3-msg gaps inner current set $gap_width; \
    else \
        i3-msg gaps inner current set 0; fi"


bindsym $mod+b border toggle

gaps inner 0
gaps outer 0

exec --no-startup-id gnome-flashback
exec --no-startup-id nm-applet
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id /usr/lib/gsd-xsettings
exec --no-startup-id picom -b --experimental-backends
exec --no-startup-id hsetroot -solid "#002b36"
exec --no-startup-id keynav "loadconfig ~/.config/keynav/i3keynavrc"
exec --no-startup-id libinput-gestures-setup start
exec --no-startup-id unclutter
exec --no-startup-id snixembed
exec --no-startup-id "sleep 3; i3-msg reload"
exec --no-startup-id "sleep 2; xcape -e 'Control_L=Escape'"

client.focused          #002b36 #586e75 #fdf6e3 #268bd2
client.focused_inactive #002b36 #073642 #839496 #073642
client.unfocused        #002b36 #073642 #839496 #073642
client.urgent           #002b36 #dc322f #fdf6e3 #002b36

new_window pixel 0 px

bindsym $mod+period workspace next; exec --no-startup-id $movemouse
bindsym $mod+comma  workspace prev; exec --no-startup-id $movemouse

bindsym $mod+m workspace next_on_output; exec --no-startup-id $movemouse
bindsym $mod+n workspace prev_on_output; exec --no-startup-id $movemouse
bindsym $mod+Shift+greater move to workspace next_on_output; workspace next_on_output; exec --no-startup-id $movemouse
bindsym $mod+Shift+less    move to workspace prev_on_output; workspace prev_on_output; exec --no-startup-id $movemouse

bindsym $mod+slash exec --no-startup-id quickswitch -e
bindsym $mod+Shift+slash exec --no-startup-id quickswitch -e -j -f

bindsym XF86AudioRaiseVolume exec --no-startup-id "pactl set-sink-volume $(pactl list short sinks | head | cut -f1) +5%"
bindsym XF86AudioLowerVolume exec --no-startup-id "pactl set-sink-volume $(pactl list short sinks | head | cut -f1) -5%"
bindsym XF86AudioMute exec --no-startup-id "pactl set-sink-mute $(pactl list short sinks | head | cut -f1) toggle"

bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause
# bindsym XF86AudioPause exec --no-startup-id playerctl pause
bindsym XF86AudioNext exec --no-startup-id playerctl next
bindsym XF86AudioPrev exec --no-startup-id playerctl previous

bindsym XF86MonBrightnessUp exec --no-startup-id true $(pkexec brillo -equ 1500 -A 5)
bindsym XF86MonBrightnessDown exec --no-startup-id true $(pkexec brillo -equ 1500 -U 5)
bindsym XF86KbdBrightnessUp exec --no-startup-id true $(pkexec brillo -k -ru 1500 -A 25)
bindsym XF86KbdBrightnessDown exec --no-startup-id true $(pkexec brillo -k -ru 1500 -U 25)

bindsym $mod+Shift+o exec --no-startup-id "pgrep picom && pkill picom || picom -b --experimental-backends"


set $screenshot_full "maim | xclip -selection clipboard -t image/png"
set $screenshot_select "maim -su | xclip -selection clipboard -t image/png"
set $screenshot_window "maim -i $(xdotool getactivewindow) | xclip -selection clipboard -t image/png"

bindsym --release Print       exec --no-startup-id $screenshot_full
bindsym --release Shift+Print exec --no-startup-id $screenshot_select
bindsym --release $mod+Print  exec --no-startup-id $screenshot_window

mode "screenshot" {
        bindsym s exec --no-startup-id $screenshot_select; mode "default"
        bindsym w exec --no-startup-id $screenshot_window; mode "default"
        bindsym f exec --no-startup-id $screenshot_full  ; mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+equal mode "screenshot"

smart_borders on
gaps inner 0
smart_gaps on
